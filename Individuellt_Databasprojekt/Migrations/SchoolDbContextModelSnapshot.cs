// <auto-generated />
using System;
using Individuellt_Databasprojekt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Individuellt_Databasprojekt.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    partial class SchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.KpersonalHarKur", b =>
                {
                    b.Property<int?>("KurskodNy")
                        .HasColumnType("int")
                        .HasColumnName("KurskodNY");

                    b.Property<int?>("PersonalId")
                        .HasColumnType("int")
                        .HasColumnName("PersonalID");

                    b.HasIndex("KurskodNy");

                    b.HasIndex("PersonalId");

                    b.ToTable("KPersonalHarKurs", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.KsattaBetyg", b =>
                {
                    b.Property<int?>("BetygId")
                        .HasColumnType("int")
                        .HasColumnName("BetygID");

                    b.Property<DateTime?>("Betygsdatum")
                        .HasColumnType("date");

                    b.Property<int?>("KurskodNy")
                        .HasColumnType("int")
                        .HasColumnName("kurskodNY");

                    b.Property<int?>("PersonalId")
                        .HasColumnType("int")
                        .HasColumnName("personalID");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasIndex("BetygId");

                    b.HasIndex("KurskodNy");

                    b.HasIndex("PersonalId");

                    b.HasIndex("StudentId");

                    b.ToTable("KSattaBetyg", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.KstudenterIkurser", b =>
                {
                    b.Property<int?>("KurskodNy")
                        .HasColumnType("int")
                        .HasColumnName("kurskodNY");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasIndex("KurskodNy");

                    b.HasIndex("StudentId");

                    b.ToTable("KStudenterIKurser", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblBetyg", b =>
                {
                    b.Property<int>("BetygId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BetygID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BetygId"), 1L, 1);

                    b.Property<string>("Betyg")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Betygpoäng")
                        .HasColumnType("int");

                    b.HasKey("BetygId")
                        .HasName("PK__tblBetyg__E90ED0485A35972D");

                    b.ToTable("tblBetyg", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblKlasser", b =>
                {
                    b.Property<int>("KlassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KlassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlassId"), 1L, 1);

                    b.Property<string>("KlassNamn")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("KlassId")
                        .HasName("PK__Klasser__CF47A60D33E6B237");

                    b.ToTable("tblKlasser", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblKur", b =>
                {
                    b.Property<int>("KurskodNy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("kurskodNy");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KurskodNy"), 1L, 1);

                    b.Property<string>("Kursnamn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Kursslut")
                        .HasColumnType("date")
                        .HasColumnName("kursslut");

                    b.Property<DateTime?>("Kursstart")
                        .HasColumnType("date");

                    b.Property<int?>("Poäng")
                        .HasColumnType("int");

                    b.HasKey("KurskodNy");

                    b.ToTable("tblKurs", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblPersonal", b =>
                {
                    b.Property<int>("PersonalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonalID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalId"), 1L, 1);

                    b.Property<string>("Efternamn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Förnamn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Lön")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDatum")
                        .HasColumnType("date");

                    b.Property<int?>("Titel")
                        .HasColumnType("int");

                    b.HasKey("PersonalId")
                        .HasName("PK__tblPerso__28343713BC340614");

                    b.HasIndex("Titel");

                    b.ToTable("tblPersonal", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("Efternamn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Förnamn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Klass")
                        .HasColumnType("int");

                    b.Property<string>("Personnummer")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.HasKey("StudentId");

                    b.HasIndex("Klass");

                    b.ToTable("tblStudent", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblTitlar", b =>
                {
                    b.Property<int>("TitelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TitelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitelId"), 1L, 1);

                    b.Property<string>("Titel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TitelId")
                        .HasName("PK__Titlar__6E58D659325B3EA8");

                    b.ToTable("tblTitlar", (string)null);
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.VWspersonalTitel", b =>
                {
                    b.Property<string>("Efternamn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Förnamn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int")
                        .HasColumnName("personalID");

                    b.Property<string>("Titel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("vWSPersonalTitel");
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.KpersonalHarKur", b =>
                {
                    b.HasOne("Individuellt_Databasprojekt.Models.TblKur", "KurskodNyNavigation")
                        .WithMany()
                        .HasForeignKey("KurskodNy")
                        .HasConstraintName("FK_KPersonalHarKurs_tblKurs");

                    b.HasOne("Individuellt_Databasprojekt.Models.TblPersonal", "Personal")
                        .WithMany()
                        .HasForeignKey("PersonalId")
                        .HasConstraintName("FK_KPersonalHarKurs_tblPersonal");

                    b.Navigation("KurskodNyNavigation");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.KsattaBetyg", b =>
                {
                    b.HasOne("Individuellt_Databasprojekt.Models.TblBetyg", "Betyg")
                        .WithMany()
                        .HasForeignKey("BetygId")
                        .HasConstraintName("FK_KSattaBetyg_tblBetyg");

                    b.HasOne("Individuellt_Databasprojekt.Models.TblKur", "KurskodNyNavigation")
                        .WithMany()
                        .HasForeignKey("KurskodNy")
                        .HasConstraintName("FK_KSattaBetyg_tblKurs");

                    b.HasOne("Individuellt_Databasprojekt.Models.TblPersonal", "Personal")
                        .WithMany()
                        .HasForeignKey("PersonalId")
                        .HasConstraintName("FK_KSattaBetyg_tblPersonal");

                    b.HasOne("Individuellt_Databasprojekt.Models.TblStudent", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_KSattaBetyg_tblStudent");

                    b.Navigation("Betyg");

                    b.Navigation("KurskodNyNavigation");

                    b.Navigation("Personal");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.KstudenterIkurser", b =>
                {
                    b.HasOne("Individuellt_Databasprojekt.Models.TblKur", "KurskodNyNavigation")
                        .WithMany()
                        .HasForeignKey("KurskodNy")
                        .HasConstraintName("FK_KStudenterIKurser_tblKurs");

                    b.HasOne("Individuellt_Databasprojekt.Models.TblStudent", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_KStudenterIKurser_tblStudent1");

                    b.Navigation("KurskodNyNavigation");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblPersonal", b =>
                {
                    b.HasOne("Individuellt_Databasprojekt.Models.TblTitlar", "TitelNavigation")
                        .WithMany("TblPersonals")
                        .HasForeignKey("Titel")
                        .HasConstraintName("FK_tblPersonal_Titlar");

                    b.Navigation("TitelNavigation");
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblStudent", b =>
                {
                    b.HasOne("Individuellt_Databasprojekt.Models.TblKlasser", "KlassNavigation")
                        .WithMany("TblStudents")
                        .HasForeignKey("Klass")
                        .HasConstraintName("FK_tblStudent_tblKlasser");

                    b.Navigation("KlassNavigation");
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblKlasser", b =>
                {
                    b.Navigation("TblStudents");
                });

            modelBuilder.Entity("Individuellt_Databasprojekt.Models.TblTitlar", b =>
                {
                    b.Navigation("TblPersonals");
                });
#pragma warning restore 612, 618
        }
    }
}
